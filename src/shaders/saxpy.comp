#version 460 core
#extension GL_KHR_shader_subgroup_vote: enable
#extension GL_KHR_shader_subgroup_arithmetic: enable
#extension GL_EXT_shader_atomic_float: enable
#extension GL_EXT_debug_printf : enable
#extension SPV_KHR_non_semantic_info : enable 

layout(local_size_x = 32) in;
layout(push_constant) uniform Parameters {
   uint numElements;
	float a;
} params;

layout(std430, binding = 0) buffer lay0 { float arr_y[]; };
layout(std430, binding = 1) buffer lay1 { float arr_x[]; };

shared float partialSum[32];
void main(){
   uint id = gl_LocalInvocationID.x;
   uint gid = gl_GlobalInvocationID.x;
   partialSum[id] = (gid < params.numElements) ? arr_x[gid] : 0.0f;
   barrier();
   for (uint stride = gl_WorkGroupSize.x / 2; stride > 0; stride >>= 1) {
      if (id < stride) {
         partialSum[id] += partialSum[id + stride];
      }
      barrier();
   }
   if (gl_LocalInvocationID.x == 0) {
      atomicAdd(arr_y[0], partialSum[id]);
   }
}
